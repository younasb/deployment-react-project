name: Test and build Application 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  PROJECT_ID: ${{ secrets.GOOGLE_PROJECT }}
  GAR_LOCATION: us-central1
  SERVICE: YOUR_SERVICE_NAME
  REPOSITORY: deployment-react
  REGION: YOUR_SERVICE_REGION # TODO: update Cloud Run service region

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        with:
          # Required for SonarCloud analysis of PRs
          # Fetches Git history needed to identify changed files
          fetch-depth: 0
      - name: setup nodeJs
      #setup nodeJs
        uses: actions/setup-node@v4
        with:
            node-version: '20'
            cache: 'npm'
            
      - name: Install dependencies
        run: npm ci

      - name: Run linters
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed for PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Authenticate with gcp
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
         python-version: '3.9'
      
      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v2
      
      - name: use gcloud sdk
        run: gcloud info

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      
      # Extract metadata (tags, labels) for Docker
      # This will generate tags like the commit SHA, 'latest' etc.
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/dep-react
      
      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as build context
          push: true # Push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata action
          cache-from: type=gha # Enable GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max
      

          
    

        